let shmmap = {
	create() {
		throw new Error('cannot use shared memory on this platform');
	},
};
try {
	shmmap = require('shmmap');
}
catch(e_require) {}

@import '../typed-arrays.js.jmacs'

@$ shared_memory = 'shmmap.create';
@$ transferable = false;

@{TypedArrays((s_local, s_how, s_typed_array) => {
	return /* syntax: js */ `
		// create shared memory segment
		let [s_key, db_shared] = ${shared_memory}(${s_how});
		h_this.key = s_key;
		${s_local} = new ${s_typed_array}(db_shared.buffer);
	`;
})}

// const shared_array_buffer = (nt_buffer) => {
// 	let [s_key, db_array] = shm.create(nt_buffer);
// 	console.log('created shared buffer with key: ',s_key);
// 	return Object.assign(db_array.buffer, {
// 		[$_SHAREABLE]: 1,
// 		key: s_key,
// 	});
// };

const ArrayBufferS = (nt_buffer) => shmmap.create(nt_buffer);


// globals
module.exports = {
	exports: {
		ArrayBufferS: ArrayBufferS,
		ArrayBufferT: ArrayBufferS,
		@{memory_exports}
	},
};
